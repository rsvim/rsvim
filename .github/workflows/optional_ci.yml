name: Optional
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 3
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  RSVIM_LOG: "trace"
  RUST_BACKTRACE: "full"
jobs:
  check:
    name: Optional Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        if: ${{ github.ref != 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: crate-ci/typos@master
      - name: Prettier
        run: |
          npm install -g prettier
          prettier --version
          echo "show PWD=${PWD}"
          echo "prettier --check *.md **/*.ts"
          prettier --check *.md **/*.ts
      - uses: taiki-e/install-action@cargo-binstall
      - name: Cargo Bloat
        shell: bash
        run: |
          cargo binstall -y cargo-bloat
          echo "# Bloat Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "## Largest functions" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cargo bloat --release --bin rsvim -n 15 >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

          echo "## Largest crates" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cargo bloat --release --bin rsvim --crates -n 15 >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Comment Cargo Bloat Diff
        continue-on-error: true
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: $GITHUB_STEP_SUMMARY
            })
