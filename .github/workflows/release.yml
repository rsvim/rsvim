name: Cargo Release
permissions:
  contents: write
on:
  push:
    tags:
      - "*"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: false
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 3
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"
  RUSTUP_MAX_RETRIES: 3
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          makeLatest: true
          draft: true
          body: ""
          omitBody: true
  upload-assets:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: prepare
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04-arm
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            # - target: aarch64-unknown-linux-musl
            #   os: ubuntu-22.04
            # - target: x86_64-unknown-linux-musl
            #   os: ubuntu-22.04
          - target: aarch64-apple-darwin
            os: macos-14
          - target: x86_64-apple-darwin
            os: macos-13
          - target: x86_64-pc-windows-msvc
            os: windows-2022
            # - target: aarch64-pc-windows-msvc
            #   os: windows-2022
            # - target: x86_64-unknown-freebsd
            #   os: ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v5
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust
        run: |
          rustup update --no-self-update stable
          rustup default stable
          rustup component add --toolchain stable rust-src clippy
      # - uses: taiki-e/setup-cross-toolchain-action@v1
      #   with:
      #     target: ${{ matrix.target }}
      #   if: matrix.target == 'aarch64-unknown-linux-gnu'
      # - uses: taiki-e/install-action@cross
      #   if: contains(matrix.target, '-musl')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: rsvim
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
          include: README.md,CHANGELOG.md,LICENSE.txt
          checksum: sha256
          profile: release
          locked: true
      - name: Cargo Build
        run: |
          cargo build --release
      - name: Create Artifact
        if: ${{ matrix.os != 'windows-2022' }}
        run: |
          mkdir rsvim-${{ matrix.target }}
          cp target/release/rsvim rsvim-${{ matrix.target }}
          cp README.md rsvim-${{ matrix.target }}
          cp CHANGELOG.md rsvim-${{ matrix.target }}
          cp LICENSE.txt rsvim-${{ matrix.target }}
          tar -czvf rsvim-${{ matrix.target }}.tar.gz rsvim-${{ matrix.target }}
          shasum -a 256 rsvim-${{ matrix.target }}.tar.gz >rsvim-${{ matrix.target }}.tar.gz.sha256
      - name: Create Artifact (Windows)
        if: ${{ matrix.os == 'windows-2022' }}
        run: |
          mkdir rsvim-${{ matrix.target }}
          cp target/release/rsvim.exe rsvim-${{ matrix.target }}
          cp README.md rsvim-${{ matrix.target }}
          cp CHANGELOG.md rsvim-${{ matrix.target }}
          cp LICENSE.txt rsvim-${{ matrix.target }}
          tar -czvf rsvim-${{ matrix.target }}.tar.gz rsvim-${{ matrix.target }}
          shasum -a 256 rsvim-${{ matrix.target }}.tar.gz >rsvim-${{ matrix.target }}.tar.gz.sha256
          7z a rsvim-${{ matrix.target }}.zip rsvim-${{ matrix.target }}
          shasum -a 256 rsvim-${{ matrix.target }}.zip >rsvim-${{ matrix.target }}.zip.sha256
      - name: Create New Release
        uses: ncipollo/release-action@v1
        if: ${{ matrix.os != 'windows-2022' }}
        with:
          allowUpdates: true
          makeLatest: true
          draft: true
          removeArtifacts: false
          body: ""
          omitBody: true
          artifacts: |
            rsvim-${{ matrix.target }}.tar.gz
            rsvim-${{ matrix.target }}.tar.gz.sha256
      - name: Create New Release (Windows)
        uses: ncipollo/release-action@v1
        if: ${{ matrix.os == 'windows-2022' }}
        with:
          allowUpdates: true
          makeLatest: true
          draft: true
          removeArtifacts: false
          body: ""
          omitBody: true
          artifacts: |
            rsvim-${{ matrix.target }}.tar.gz
            rsvim-${{ matrix.target }}.tar.gz.sha256
            rsvim-${{ matrix.target }}.zip
            rsvim-${{ matrix.target }}.zip.sha256
