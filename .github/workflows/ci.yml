name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 3
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  RUST_BACKTRACE: "full"
jobs:
  ts_lint:
    name: JavaScript Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: Tsc
        run: |
          npm install -g typescript
          tsc --version
          echo "show PWD=${PWD}"
          echo "ls -la"
          ls -la
          echo "tsc"
          tsc
  rs_lint:
    name: Rust Lint
    runs-on: ubuntu-latest
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: cargo-bins/cargo-binstall@main
      - uses: actions/checkout@v4
      - name: Rustfmt
        run: cargo fmt --check
      - name: Taplo
        run: |
          cargo binstall --force --no-confirm taplo-cli
          echo "Info: taplo --version"
          taplo --version
          echo "Info: taplo check"
          taplo check
          echo "Info: taplo fmt --check"
          taplo fmt --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features
      - name: MSRV
        run: |
          cargo binstall --force --no-confirm cargo-msrv
          echo "Info: cargo msrv --version"
          cargo msrv --version
          echo "Info: cargo msrv list"
          cargo msrv list
          echo "Info: cargo msrv verify"
          cargo msrv verify
      - name: Docs
        run: |
          echo "Info: cargo doc --workspace"
          cargo doc --workspace
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run Tests
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
