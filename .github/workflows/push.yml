name: Push
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
env:
  RUST_CHANNEL: "stable"
  RUSTFLAGS: "-Dwarnings"
  RUST_BACKTRACE: "full"
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - uses: actions/checkout@v4
      - name: Rustfmt
        run: cargo fmt --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run Unit Tests
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
          tail -n 10 lcov.info
      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - lint
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
      - uses: actions/checkout@v4
      - run: |
          echo "release_created:${{ steps.release.outputs.release_created }}"
          echo "tag_name:${{ steps.release.outputs.tag_name }}"
          echo "major:${{ steps.release.outputs.major }}"
          echo "minor:${{ steps.release.outputs.minor }}"
          echo "patch:${{ steps.release.outputs.patch }}"
