name: Pull Request
on:
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
permissions:
  contents: write
  pull-requests: write
env:
  RUST_CHANNEL: "stable"
  RUSTFLAGS: "-Dwarnings"
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
jobs:
  commit:
    name: Commits
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Rustfmt
        run: cargo fmt
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-format"
          push_options: "--force"
      - name: Clippy
        run: cargo clippy --all-targets --all-features
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Rust
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src rust-analyzer clippy cargo
          rustup default ${{ env.RUST_CHANNEL }}
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run Unit Tests
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
